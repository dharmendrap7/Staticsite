@model Conquerorhub.Models.Sponsors
@{
    ViewBag.Title = "Sponsor";

    Layout = "~/Views/Shared/_winkuFormLayout.cshtml";
}
<style>
    .show-read-more .more-text {
        display: none;
    }
</style>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>


<div class="col-lg-9">
    <div class="central-meta">
        <div class="new-postbox">
            <figure>
                <img src="~/Content/assets/images/resources/admin2.jpg" alt="">
            </figure>
            <div class="newpst-input">
                @if (ViewBag.UserId == null)
                {


                    using (Html.BeginForm("Sponsor", "OrganizerBasicDetails", FormMethod.Post, new { enctype = "multipart/form-data", Id = "frmAddImage" }))
                    {
                        @Html.HiddenFor(m => m.sponsorSingleData.Id)
                        <form method="post">
                            @Html.TextAreaFor(m => m.sponsorSingleData.Caption, new { rows = "2", placeholder = "Write Caption" })

                            <div class="attachments">
                                <ul>

                                    <li>
                                        <i class="fa fa-image"></i>
                                        <label class="fileContainer">
                                            @Html.TextBoxFor(m => m.sponsorSingleData.UploadedImage, new { type = "file", id = " ImgUpload", onchange = "readURL(this) ImgPre(this)" })

                                        </label>
                                    </li>
                                   

                                    <li>
                                        <button type="submit"  id="submitbtn">Upload</button>
                                    </li>
                                </ul>
                                <div class="row">
                                    <p>
                                        <img id="ImgPreview" height="100" width="100" hidden />
                                    </p>
                                    
                                </div>
                            </div>
                        </form>
                    }
                }
            </div>
        </div>
    </div><!-- add post new box -->

    @if (Model.sponsorMultipleData.Count == 0)
    {
        <div class="container">
            <h1>There are no sponsors</h1>
        </div>
    }
    @if (Model.sponsorMultipleData.Count != 0)
    {
        var n = 0;
        bool x = true;
        Guid? id = Guid.Empty;

        <div class="central-meta item">
            <ul class="photos">
                @foreach (var item in Model.sponsorMultipleData)
                {
                    n++;
                    <li>
                       @if (ViewBag.UserId == null)
                       {
                        <div class="close" onclick='Deletesponsorimage("@item.ImageId","@item.UserId")'>x</div>

                       }
                        <div class="friend-info" id="postid_@item.ImageId">
                            <a class="strip" href="@item.Images.FirstOrDefault()" title="" data-strip-group="mygroup" data-strip-group-options="loop: false">
                                <img class="img" src="@item.Images.FirstOrDefault()">
                            </a>
                            <div class="we-video-info">
                                <ul>

                                    <li>
                                        <input type="hidden" id="detinationId" value="@item.UserId" />
                                        <input type="text" value="0" id="PostId" hidden />  <!-- Ch2-->
                                        <input type="text" id="pcid" hidden />  <!-- Ch3-->
                                        <input type="text" value="0" id="IsReplay" hidden />  <!-- Ch4-->
                                        <span class="comment" data-toggle="tooltip" title="Comments" id="@item.ImageId">
                                            <!-- Ch5-->
                                            <i class="fa fa-comments-o"></i>
                                            @{
                                                var count = @Model.sponsorSingleData.commentList.Where(model => model.DestinationUserId == item.UserId && model.PostId == item.ImageId).ToList().Count() != 0 ? @Model.sponsorSingleData.commentList.Where(model => model.DestinationUserId == item.UserId && model.PostId == item.ImageId).ToList().Count() : 0;
                                                ViewBag.commentCount = count;
                                            }
                                            <ins>@ViewBag.commentCount</ins>
                                        </span>
                                    </li>
                                    <li>
                                        <span class="like" data-toggle="tooltip" title="like">

                                            <i class="ti-heart" onclick="postlike(true,'@item.ImageId','@item.UserId',this)"></i>
                                            @{var abc = Model.sponsorSingleData.LikeList.Select(model => model.Imageid == item.ImageId && model.DestinationUserId == item.UserId).ToList().Count() != 0 ? Model.sponsorSingleData.LikeList.Where(model => model.Imageid == item.ImageId && model.DestinationUserId == item.UserId && model.LikeStatus == true).Select(model => model.LikeStatus == true).Count() : 0;
                                            ViewBag.Count = abc;
                                            }
                                            <ins id="Like_@item.ImageId">@ViewBag.Count</ins>
                                        </span>
                                    </li>
                                    <li>

                                        <span class="dislike" data-toggle="tooltip" title="dislike">
                                            <i class="ti-heart-broken" onclick="postlike(false,'@item.ImageId','@item.UserId',this)"></i>

                                            @{var abc1 = Model.sponsorSingleData.LikeList.Select(model => model.Imageid == item.ImageId && model.DestinationUserId == item.UserId).ToList().Count() != 0 ? Model.sponsorSingleData.LikeList.Where(model => model.Imageid == item.ImageId && model.DestinationUserId == item.UserId && model.LikeStatus == false).Select(model => model.LikeStatus == false).Count() : 0;
                                            ViewBag.Count1 = abc1;
                                            }
                                            <ins id="DisLike_@item.ImageId">@ViewBag.Count1</ins>
                                        </span>
                                    </li>
                                    <li>
                                        <span data-toggle="tooltip" title="Share">
                                            @{ var xyz = Model.sponsorSingleData.sharelist.Select(model => model.PostId == item.ImageId && model.DestinationPage == item.UserId).ToList().Count() != 0 ? Model.sponsorSingleData.sharelist.Where(model => model.PostId == item.ImageId && model.SourcePage == item.UserId).Select(model => model).Count() : 0;
                                           ViewBag.ShareCount = xyz;
                                            }
                                            <ins id="shareId_@item.ImageId">@ViewBag.ShareCount</ins>
                                            <i class="fa fa-share-alt" onclick="postshare('@item.ImageId','@item.UserId' )"></i>
                                        </span>
                                    </li>

                                </ul>
                            </div>
                            <div class="description">

                                <p class="show-read-more">@item.Caption</p>
                            </div>
                            </div>

</li>

                                            }
            </ul>
            <div class="lodmore"><button class="btn-view btn-load-more"></button></div>
        </div><!-- photos -->
                                            }
</div><!-- centerl meta -->
<script>
    $(document).ready(function () {
        debugger;
        var maxLength = 20;
        $(".show-read-more").each(function () {
            var myStr = $(this).text();
            if ($.trim(myStr).length > maxLength) {
                var newStr = myStr.substring(0, maxLength);
                var removedStr = myStr.substring(maxLength, $.trim(myStr).length);
                $(this).empty().html(newStr);
                $(this).append(' <a href="javascript:void(0);" class="read-more">read more...</a>');
                $(this).append('<span class="more-text">' + removedStr + '</span>');
            }
        });
        $(".read-more").click(function () {
            $(this).siblings(".more-text").contents().unwrap();
            $(this).remove();
        });
    });
</script>
<script>
    function ImgPre(input) {
        $("#ImgPreview").removeAttr("hidden");
        if (input.files[0]) {
            var uploadimg = new FileReader();
            uploadimg.onload = function (displayimg) {
                $("#ImgPreview").attr('src', displayimg.target.result);
            }
            uploadimg.readAsDataURL(input.files[0]);
        }
    }
    </script>


<script>
        function readURL(input) {
            if (!window.File || !window.FileReader) {
                alert("Please upgrade your browser");
                return;
            }

            if (input.files && input.files[0]) {
                $("#submitbtn").removeAttr("disabled");

                var reader = new FileReader();
                reader.onload = function (e) {
                    var img = new Image;
                    img.onload = function () {
                        if (img.width < 300 || img.width > 300) {
                            alert("Image width should be between 300px and 1000px; please resize the image and try again");
                            $("#submitbtn").attr("disabled", "disabled");
                        }
                        else if (img.height < 200 || img.height > 300) {
                            alert("Image width should be between 300px and 1000px; please resize the image and try again");
                            $("#submitbtn").attr("disabled", "disabled");
                        }
                    };

                    img.src = reader.result;
                };

                // this goes off the MIME type but you can stick to the extensions if you want as that
                // code already works for you
                var imageType = /image.*/;

                if (!input.files[0].type.match(imageType)) {
                    alert("Only images can be uploaded");
                    $("#submitbtn").attr("disabled", "disabled");
                }
                //else if (input.files[0].size > 1000000) {
                //    alert("Only files less than 1MB can be uploaded");
                //    $("#submitbtn").attr("disabled", "disabled");
                //}
                else {
                    reader.readAsDataURL(input.files[0]);
                }
            }
        }
</script>